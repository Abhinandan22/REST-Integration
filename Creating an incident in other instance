Steps to follow:-



--------> create a REST Message on the Source Instance and provide the EndPoint 
of the Target Instance

-------> Provide the Authentication type as Basic and provide the Basic Other Profile with a valid target instance user.(The user should be provided rest_service and web_service_admin role)

-------> Make sure the headers are provided in the rest message

-----> create a new record with POST operation with and provide the following script :-

${} -------> This will accept the dynamic values for the fields rather than the hard-coded values.
{
    "short_description": "${sd}",
    "caller_id": "${caller}",
    "category": "${cat}",
    "subcategory": "${subcat}",
    "impact": "${imp}"
}

Business Rules on the incident table:-

(function executeRule(current, previous /*null when async*/) {

	// Add your code here

	var request = new sn_ws.RESTMessageV2("Other ServiceNow Instance","create_incident");
	
	request.setStringParameterNoEscape("sd",current.short_description);
	request.setStringParameterNoEscape("caller",current.caller_id);
	request.setStringParameterNoEscape("cat",current.category);
	request.setStringParameterNoEscape("subcat",current.subcategory);
	request.setStringParameterNoEscape("ci",current.impact);
	request.execute();
	
	var response = request.execute();
	var requestBody =request.getRequestBody();
	var responseBody = response.getBody();
	var httpStatus = response.getStatusCode();
	gs.log(responseBody);
	responseJSON = responseBody.substring(10,responseBody.length-1);
	parsedJSON = JSON.parse(responseJSON);
	var targetTicNumber = parsedJSON["number"];
	var targetSys_id = parsedJSON["sys_id"];
	
	var logString = "TargetTicNumber - " + targetTicNumber + "\ntargetSys_id - "+ targetSys_id;
	gs.log(logString,"BR- ServiceNowREST for Create");
	
	
	
	
	
})(current, previous);


----> Check the logs and find the incident created and check the same in the other instance
